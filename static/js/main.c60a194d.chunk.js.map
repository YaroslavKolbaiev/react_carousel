{"version":3,"sources":["utils/images.ts","utils/carouselLengthSelector.ts","components/Carousel.tsx","App.tsx","index.tsx"],"names":["images","carouselLengthSelector","id","number","Carousel","sliderRef","useRef","useState","itemWidth","setItemWidth","frameSize","setFrameSize","step","setStep","animationDurarion","setAnimationDurarion","infinite","setInfinite","increaseWidth","value","fn","plus","decreaseWidth","settings","className","dots","speed","slidesToShow","slidesToScroll","arrows","type","onClick","current","slickPrev","slickNext","ref","map","item","style","width","src","alt","defaultValue","onChange","event","target","selector","checked","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c60a194d.chunk.js","sourcesContent":["export const images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","export const carouselLengthSelector = [\n  { id: 'one', number: 1 },\n  { id: 'two', number: 2 },\n  { id: 'three', number: 3 },\n  { id: 'four', number: 4 },\n  { id: 'fmive', number: 5 },\n];\n","import { useRef, useState } from 'react';\nimport Slider from 'react-slick';\nimport { images } from '../utils/images';\nimport { carouselLengthSelector } from '../utils/carouselLengthSelector';\n\nexport const Carousel: React.FC = () => {\n  const sliderRef = useRef<Slider | null>(null);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDurarion, setAnimationDurarion] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  function increaseWidth(value: number, fn: (par: number) => void) {\n    let plus = value;\n\n    plus += 1;\n\n    fn(plus);\n  }\n\n  function decreaseWidth(value: number, fn: (par: number) => void) {\n    let plus = value;\n\n    plus -= 1;\n\n    fn(plus);\n  }\n\n  const next = () => {\n    if (sliderRef.current) {\n      sliderRef.current.slickNext();\n    }\n  };\n\n  const previous = () => {\n    if (sliderRef.current) {\n      sliderRef.current.slickPrev();\n    }\n  };\n\n  const settings = {\n    className: 'carousel',\n    dots: true,\n    infinite,\n    speed: animationDurarion,\n    slidesToShow: frameSize,\n    slidesToScroll: step,\n    arrows: false,\n  };\n\n  return (\n    <>\n      <div className=\"carousel\">\n        <div className=\"carousel__header\">\n          <h1>\n            Carousel with\n            {` ${frameSize} `}\n            images\n          </h1>\n\n          <div className=\"carousel__buttons\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={previous}\n            >\n              {'<'}\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={next}\n            >\n              {'>'}\n            </button>\n          </div>\n\n        </div>\n        <Slider ref={sliderRef} {...settings}>\n          {images.map((item) => (\n            <div>\n              <div className=\"container\">\n                <img style={{ width: itemWidth }} src={item} alt=\"logo\" />\n              </div>\n            </div>\n          ))}\n        </Slider>\n\n      </div>\n      <div className=\"select\">\n        <h4 className=\"select__title\">Chose image width:</h4>\n        <button\n          type=\"button\"\n          onClick={() => {\n            decreaseWidth(itemWidth, setItemWidth);\n          }}\n        >\n          -\n        </button>\n        <input style={{ width: 25 }} type=\"text\" value={itemWidth} />\n        <button\n          type=\"button\"\n          onClick={() => {\n            increaseWidth(itemWidth, setItemWidth);\n          }}\n        >\n          +\n        </button>\n        <br />\n        <br />\n        <h4 className=\"select__title\">Chose frame size:</h4>\n        <select\n          value={frameSize}\n          defaultValue={3}\n          onChange={(event) => {\n            setFrameSize(+event.target.value);\n          }}\n        >\n          {carouselLengthSelector.map(selector => (\n            <option\n              value={selector.number}\n              key={selector.id}\n            >\n              {selector.number}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <h4 className=\"select__title\">Chose steps:</h4>\n        <select\n          value={step}\n          defaultValue={3}\n          onChange={(event) => {\n            setStep(+event.target.value);\n          }}\n        >\n          {carouselLengthSelector.map(selector => (\n            <option\n              value={selector.number}\n              key={selector.id}\n            >\n              {selector.number}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <h4 className=\"select__title\">Chose animation duration:</h4>\n        <button\n          type=\"button\"\n          onClick={() => {\n            decreaseWidth(animationDurarion, setAnimationDurarion);\n          }}\n        >\n          -\n        </button>\n        <input style={{ width: 35 }} type=\"text\" value={animationDurarion} />\n        <button\n          type=\"button\"\n          onClick={() => {\n            increaseWidth(animationDurarion, setAnimationDurarion);\n          }}\n        >\n          +\n        </button>\n        <br />\n        <br />\n        <input\n          type=\"checkbox\"\n          id=\"1\"\n          checked={infinite}\n          onClick={() => {\n            setInfinite(!infinite);\n          }}\n        />\n        <label htmlFor=\"1\">Infinite</label>\n      </div>\n\n    </>\n  );\n};\n","import 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Carousel />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}