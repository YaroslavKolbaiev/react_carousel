{"version":3,"sources":["utils/images.ts","utils/carouselLengthSelector.ts","components/Carousel.tsx","App.tsx","index.tsx"],"names":["images","carouselLengthSelector","id","number","Carousel","sliderRef","useRef","useState","itemWidth","setItemWidth","frameSize","setFrameSize","step","setStep","animationDurarion","setAnimationDurarion","isInfinite","setInfinite","settings","useMemo","className","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","type","onClick","current","slickPrev","slickNext","ref","map","item","style","width","src","alt","value","defaultValue","onChange","event","target","selector","checked","htmlFor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b08fe5c6.chunk.js","sourcesContent":["export const images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","export const carouselLengthSelector = [\n  { id: 'one', number: 1 },\n  { id: 'two', number: 2 },\n  { id: 'three', number: 3 },\n  { id: 'four', number: 4 },\n  { id: 'fmive', number: 5 },\n];\n","import { useMemo, useRef, useState } from 'react';\nimport Slider from 'react-slick';\nimport { images } from '../utils/images';\nimport { carouselLengthSelector } from '../utils/carouselLengthSelector';\n\nexport const Carousel: React.FC = () => {\n  const sliderRef = useRef<Slider | null>(null);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDurarion, setAnimationDurarion] = useState(1000);\n  const [isInfinite, setInfinite] = useState(false);\n\n  const next = () => {\n    if (sliderRef.current) {\n      sliderRef.current.slickNext();\n    }\n  };\n\n  const previous = () => {\n    if (sliderRef.current) {\n      sliderRef.current.slickPrev();\n    }\n  };\n\n  const settings = useMemo(() => {\n    return {\n      className: 'carousel',\n      dots: true,\n      infinite: isInfinite,\n      speed: animationDurarion,\n      slidesToShow: frameSize,\n      slidesToScroll: step,\n      arrows: false,\n    };\n  }, [isInfinite, animationDurarion, frameSize, step]);\n\n  return (\n    <>\n      <div className=\"carousel\">\n        <div className=\"carousel__header\">\n          <h1>\n            Carousel with\n            {` ${frameSize} `}\n            images\n          </h1>\n\n          <div className=\"carousel__buttons\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={previous}\n            >\n              {'<'}\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={next}\n            >\n              {'>'}\n            </button>\n          </div>\n\n        </div>\n        <Slider ref={sliderRef} {...settings}>\n          {images.map((item) => (\n            <div>\n              <div className=\"container\">\n                <img style={{ width: itemWidth }} src={item} alt=\"logo\" />\n              </div>\n            </div>\n          ))}\n        </Slider>\n\n      </div>\n      <div className=\"select\">\n        <h4 className=\"select__title\">Chose image width:</h4>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setItemWidth(itemWidth - 1);\n          }}\n        >\n          -\n        </button>\n        <input style={{ width: 25 }} type=\"text\" value={itemWidth} />\n        <button\n          type=\"button\"\n          onClick={() => {\n            setItemWidth(itemWidth + 1);\n          }}\n        >\n          +\n        </button>\n        <br />\n        <br />\n        <h4 className=\"select__title\">Choose frame size:</h4>\n        <select\n          value={frameSize}\n          defaultValue={3}\n          onChange={(event) => {\n            setFrameSize(+event.target.value);\n          }}\n        >\n          {carouselLengthSelector.map(selector => (\n            <option\n              value={selector.number}\n              key={selector.id}\n            >\n              {selector.number}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <h4 className=\"select__title\">Chose steps:</h4>\n        <select\n          value={step}\n          defaultValue={3}\n          onChange={(event) => {\n            setStep(+event.target.value);\n          }}\n        >\n          {carouselLengthSelector.map(selector => (\n            <option\n              value={selector.number}\n              key={selector.id}\n            >\n              {selector.number}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <h4 className=\"select__title\">Chose animation duration:</h4>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setAnimationDurarion(animationDurarion - 1);\n          }}\n        >\n          -\n        </button>\n        <input style={{ width: 35 }} type=\"text\" value={animationDurarion} />\n        <button\n          type=\"button\"\n          onClick={() => {\n            setAnimationDurarion(animationDurarion + 1);\n          }}\n        >\n          +\n        </button>\n        <br />\n        <br />\n        <input\n          type=\"checkbox\"\n          id=\"1\"\n          checked={isInfinite}\n          onClick={() => {\n            setInfinite(!isInfinite);\n          }}\n        />\n        <label htmlFor=\"1\">Infinite</label>\n      </div>\n\n    </>\n  );\n};\n","import 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\n\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <Carousel />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}